# 1
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 18:33:56 on Apr 23,2024
# vlog -sv -timescale 1ps/1ps -work work -f sources.txt 
# -- Compiling package instr_register_pkg
# -- Compiling module instr_register
# -- Importing package instr_register_pkg
# -- Compiling module instr_register_test
# -- Compiling module top
# 
# Top level modules:
# 	top
# End time: 18:33:56 on Apr 23,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim -novopt -quiet -nocoverage "+notimingchecks" "+nowarnTSCALE" -sva top -GWRITE_ORDER=2 -GWRITE_NR=50 -GSEED_VAL=782534 -GTEST_CASE=case20 -GREAD_ORDER=2 -GREAD_NR=32 
# Start time: 18:33:56 on Apr 23,2024
# 
# 
# ***********************************************************
# ***    THIS IS A SELF-CHECKING TESTBENCH (YET).  YOU    ***
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# Reseting the instruction register...
# 
# Writing values to register stack...
# At write pointer = 14:, timp 36: 
#   opcode = 8 
#   operand_a = 11
#   operand_b = 13
# 
# Writing to register location 14: 
#   opcode = 8 (POW)
#   operand_a = 11
#   operand_b = 13
# 
#   rezultat = 0
# 
# At write pointer = 2:, timp 46: 
#   opcode = 4 
#   operand_a = 13
#   operand_b = 1
# 
# Writing to register location 2: 
#   opcode = 4 (SUB)
#   operand_a = 13
#   operand_b = 1
# 
#   rezultat = 0
# 
# At write pointer = 0:, timp 56: 
#   opcode = 5 
#   operand_a = 1
#   operand_b = 1
# 
# Writing to register location 0: 
#   opcode = 5 (MULT)
#   operand_a = 1
#   operand_b = 1
# 
#   rezultat = 0
# 
# At write pointer = 17:, timp 66: 
#   opcode = 2 
#   operand_a = 1
#   operand_b = 12
# 
# Writing to register location 17: 
#   opcode = 2 (PASSB)
#   operand_a = 1
#   operand_b = 12
# 
#   rezultat = 0
# 
# At write pointer = 22:, timp 76: 
#   opcode = 0 
#   operand_a = -4
#   operand_b = 0
# 
# Writing to register location 22: 
#   opcode = 0 (ZERO)
#   operand_a = -4
#   operand_b = 0
# 
#   rezultat = 0
# 
# At write pointer = 2:, timp 86: 
#   opcode = 7 
#   operand_a = 0
#   operand_b = 13
# 
# Writing to register location 2: 
#   opcode = 7 (MOD)
#   operand_a = 0
#   operand_b = 13
# 
#   rezultat = 0
# 
# At write pointer = 15:, timp 96: 
#   opcode = 8 
#   operand_a = 13
#   operand_b = 9
# 
# Writing to register location 15: 
#   opcode = 8 (POW)
#   operand_a = 13
#   operand_b = 9
# 
#   rezultat = 0
# 
# At write pointer = 24:, timp 106: 
#   opcode = 1 
#   operand_a = -7
#   operand_b = 5
# 
# Writing to register location 24: 
#   opcode = 1 (PASSA)
#   operand_a = -7
#   operand_b = 5
# 
#   rezultat = 0
# 
# At write pointer = 3:, timp 116: 
#   opcode = 8 
#   operand_a = -11
#   operand_b = 14
# 
# Writing to register location 3: 
#   opcode = 8 (POW)
#   operand_a = -11
#   operand_b = 14
# 
#   rezultat = 0
# 
# At write pointer = 26:, timp 126: 
#   opcode = 7 
#   operand_a = -2
#   operand_b = 11
# 
# Writing to register location 26: 
#   opcode = 7 (MOD)
#   operand_a = -2
#   operand_b = 11
# 
#   rezultat = 0
# 
# At write pointer = 25:, timp 136: 
#   opcode = 1 
#   operand_a = 11
#   operand_b = 5
# 
# Writing to register location 25: 
#   opcode = 1 (PASSA)
#   operand_a = 11
#   operand_b = 5
# 
#   rezultat = 0
# 
# At write pointer = 25:, timp 146: 
#   opcode = 8 
#   operand_a = -11
#   operand_b = 15
# 
# Writing to register location 25: 
#   opcode = 8 (POW)
#   operand_a = -11
#   operand_b = 15
# 
#   rezultat = 0
# 
# At write pointer = 14:, timp 156: 
#   opcode = 1 
#   operand_a = 15
#   operand_b = 3
# 
# Writing to register location 14: 
#   opcode = 1 (PASSA)
#   operand_a = 15
#   operand_b = 3
# 
#   rezultat = 0
# 
# At write pointer = 24:, timp 166: 
#   opcode = 4 
#   operand_a = 3
#   operand_b = 6
# 
# Writing to register location 24: 
#   opcode = 4 (SUB)
#   operand_a = 3
#   operand_b = 6
# 
#   rezultat = 0
# 
# At write pointer = 30:, timp 176: 
#   opcode = 5 
#   operand_a = 6
#   operand_b = 4
# 
# Writing to register location 30: 
#   opcode = 5 (MULT)
#   operand_a = 6
#   operand_b = 4
# 
#   rezultat = 0
# 
# At write pointer = 20:, timp 186: 
#   opcode = 5 
#   operand_a = 4
#   operand_b = 10
# 
# Writing to register location 20: 
#   opcode = 5 (MULT)
#   operand_a = 4
#   operand_b = 10
# 
#   rezultat = 0
# 
# At write pointer = 7:, timp 196: 
#   opcode = 1 
#   operand_a = -6
#   operand_b = 8
# 
# Writing to register location 7: 
#   opcode = 1 (PASSA)
#   operand_a = -6
#   operand_b = 8
# 
#   rezultat = 0
# 
# At write pointer = 15:, timp 206: 
#   opcode = 4 
#   operand_a = 8
#   operand_b = 8
# 
# Writing to register location 15: 
#   opcode = 4 (SUB)
#   operand_a = 8
#   operand_b = 8
# 
#   rezultat = 0
# 
# At write pointer = 27:, timp 216: 
#   opcode = 6 
#   operand_a = -8
#   operand_b = 1
# 
# Writing to register location 27: 
#   opcode = 6 (DIV)
#   operand_a = -8
#   operand_b = 1
# 
#   rezultat = 0
# 
# At write pointer = 5:, timp 226: 
#   opcode = 2 
#   operand_a = -15
#   operand_b = 2
# 
# Writing to register location 5: 
#   opcode = 2 (PASSB)
#   operand_a = -15
#   operand_b = 2
# 
#   rezultat = 0
# 
# At write pointer = 25:, timp 236: 
#   opcode = 3 
#   operand_a = 2
#   operand_b = 11
# 
# Writing to register location 25: 
#   opcode = 3 (ADD)
#   operand_a = 2
#   operand_b = 11
# 
#   rezultat = 0
# 
# At write pointer = 13:, timp 246: 
#   opcode = 1 
#   operand_a = 11
#   operand_b = 6
# 
# Writing to register location 13: 
#   opcode = 1 (PASSA)
#   operand_a = 11
#   operand_b = 6
# 
#   rezultat = 0
# 
# At write pointer = 22:, timp 256: 
#   opcode = 6 
#   operand_a = -10
#   operand_b = 1
# 
# Writing to register location 22: 
#   opcode = 6 (DIV)
#   operand_a = -10
#   operand_b = 1
# 
#   rezultat = 0
# 
# At write pointer = 5:, timp 266: 
#   opcode = 4 
#   operand_a = 1
#   operand_b = 5
# 
# Writing to register location 5: 
#   opcode = 4 (SUB)
#   operand_a = 1
#   operand_b = 5
# 
#   rezultat = 0
# 
# At write pointer = 28:, timp 276: 
#   opcode = 5 
#   operand_a = -11
#   operand_b = 9
# 
# Writing to register location 28: 
#   opcode = 5 (MULT)
#   operand_a = -11
#   operand_b = 9
# 
#   rezultat = 0
# 
# At write pointer = 5:, timp 286: 
#   opcode = 2 
#   operand_a = 9
#   operand_b = 2
# 
# Writing to register location 5: 
#   opcode = 2 (PASSB)
#   operand_a = 9
#   operand_b = 2
# 
#   rezultat = 0
# 
# At write pointer = 11:, timp 296: 
#   opcode = 1 
#   operand_a = 2
#   operand_b = 0
# 
# Writing to register location 11: 
#   opcode = 1 (PASSA)
#   operand_a = 2
#   operand_b = 0
# 
#   rezultat = 0
# 
# At write pointer = 18:, timp 306: 
#   opcode = 6 
#   operand_a = 0
#   operand_b = 9
# 
# Writing to register location 18: 
#   opcode = 6 (DIV)
#   operand_a = 0
#   operand_b = 9
# 
#   rezultat = 0
# 
# At write pointer = 16:, timp 316: 
#   opcode = 4 
#   operand_a = -7
#   operand_b = 1
# 
# Writing to register location 16: 
#   opcode = 4 (SUB)
#   operand_a = -7
#   operand_b = 1
# 
#   rezultat = 0
# 
# At write pointer = 20:, timp 326: 
#   opcode = 0 
#   operand_a = -15
#   operand_b = 10
# 
# Writing to register location 20: 
#   opcode = 0 (ZERO)
#   operand_a = -15
#   operand_b = 10
# 
#   rezultat = 0
# 
# At write pointer = 23:, timp 336: 
#   opcode = 4 
#   operand_a = 10
#   operand_b = 13
# 
# Writing to register location 23: 
#   opcode = 4 (SUB)
#   operand_a = 10
#   operand_b = 13
# 
#   rezultat = 0
# 
# At write pointer = 12:, timp 346: 
#   opcode = 0 
#   operand_a = 13
#   operand_b = 11
# 
# Writing to register location 12: 
#   opcode = 0 (ZERO)
#   operand_a = 13
#   operand_b = 11
# 
#   rezultat = 0
# 
# At write pointer = 30:, timp 356: 
#   opcode = 8 
#   operand_a = 11
#   operand_b = 1
# 
# Writing to register location 30: 
#   opcode = 8 (POW)
#   operand_a = 11
#   operand_b = 1
# 
#   rezultat = 0
# 
# At write pointer = 20:, timp 366: 
#   opcode = 4 
#   operand_a = -15
#   operand_b = 3
# 
# Writing to register location 20: 
#   opcode = 4 (SUB)
#   operand_a = -15
#   operand_b = 3
# 
#   rezultat = 0
# 
# At write pointer = 19:, timp 376: 
#   opcode = 6 
#   operand_a = 3
#   operand_b = 6
# 
# Writing to register location 19: 
#   opcode = 6 (DIV)
#   operand_a = 3
#   operand_b = 6
# 
#   rezultat = 0
# 
# At write pointer = 19:, timp 386: 
#   opcode = 3 
#   operand_a = -10
#   operand_b = 9
# 
# Writing to register location 19: 
#   opcode = 3 (ADD)
#   operand_a = -10
#   operand_b = 9
# 
#   rezultat = 0
# 
# At write pointer = 22:, timp 396: 
#   opcode = 7 
#   operand_a = 9
#   operand_b = 0
# 
# Writing to register location 22: 
#   opcode = 7 (MOD)
#   operand_a = 9
#   operand_b = 0
# 
#   rezultat = 0
# 
# At write pointer = 14:, timp 406: 
#   opcode = 0 
#   operand_a = 0
#   operand_b = 0
# 
# Writing to register location 14: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
# 
#   rezultat = 0
# 
# At write pointer = 24:, timp 416: 
#   opcode = 3 
#   operand_a = 0
#   operand_b = 13
# 
# Writing to register location 24: 
#   opcode = 3 (ADD)
#   operand_a = 0
#   operand_b = 13
# 
#   rezultat = 0
# 
# At write pointer = 0:, timp 426: 
#   opcode = 2 
#   operand_a = 13
#   operand_b = 0
# 
# Writing to register location 0: 
#   opcode = 2 (PASSB)
#   operand_a = 13
#   operand_b = 0
# 
#   rezultat = 0
# 
# At write pointer = 5:, timp 436: 
#   opcode = 0 
#   operand_a = 0
#   operand_b = 11
# 
# Writing to register location 5: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 11
# 
#   rezultat = 0
# 
# At write pointer = 5:, timp 446: 
#   opcode = 1 
#   operand_a = 11
#   operand_b = 3
# 
# Writing to register location 5: 
#   opcode = 1 (PASSA)
#   operand_a = 11
#   operand_b = 3
# 
#   rezultat = 0
# 
# At write pointer = 12:, timp 456: 
#   opcode = 8 
#   operand_a = 3
#   operand_b = 12
# 
# Writing to register location 12: 
#   opcode = 8 (POW)
#   operand_a = 3
#   operand_b = 12
# 
#   rezultat = 0
# 
# At write pointer = 30:, timp 466: 
#   opcode = 2 
#   operand_a = -4
#   operand_b = 2
# 
# Writing to register location 30: 
#   opcode = 2 (PASSB)
#   operand_a = -4
#   operand_b = 2
# 
#   rezultat = 0
# 
# At write pointer = 9:, timp 476: 
#   opcode = 6 
#   operand_a = -14
#   operand_b = 2
# 
# Writing to register location 9: 
#   opcode = 6 (DIV)
#   operand_a = -14
#   operand_b = 2
# 
#   rezultat = 0
# 
# At write pointer = 10:, timp 486: 
#   opcode = 0 
#   operand_a = -14
#   operand_b = 10
# 
# Writing to register location 10: 
#   opcode = 0 (ZERO)
#   operand_a = -14
#   operand_b = 10
# 
#   rezultat = 0
# 
# At write pointer = 9:, timp 496: 
#   opcode = 4 
#   operand_a = 10
#   operand_b = 7
# 
# Writing to register location 9: 
#   opcode = 4 (SUB)
#   operand_a = 10
#   operand_b = 7
# 
#   rezultat = 0
# 
# At write pointer = 2:, timp 506: 
#   opcode = 4 
#   operand_a = 7
#   operand_b = 3
# 
# Writing to register location 2: 
#   opcode = 4 (SUB)
#   operand_a = 7
#   operand_b = 3
# 
#   rezultat = 0
# 
# At write pointer = 21:, timp 516: 
#   opcode = 1 
#   operand_a = -13
#   operand_b = 8
# 
# Writing to register location 21: 
#   opcode = 1 (PASSA)
#   operand_a = -13
#   operand_b = 8
# 
#   rezultat = 0
# 
# At write pointer = 27:, timp 526: 
#   opcode = 4 
#   operand_a = 8
#   operand_b = 6
# 
# Writing to register location 27: 
#   opcode = 4 (SUB)
#   operand_a = 8
#   operand_b = 6
# 
#   rezultat = 0
# 
# 
# Reading back the same register locations written...
# Read from register location 13: 
#   opcode = 1 (PASSA)
#   operand_a = 11
#   operand_b = 6
# 
#   rezultat = 11
# 
# Fail counter: 0
# 
# Valoarea citita este corecta.
# Valoare asteptata: 11
# Valoare citita: 11
# 
# Read from register location 3: 
#   opcode = 8 (POW)
#   operand_a = -11
#   operand_b = 14
# 
#   rezultat = 379749833583241
# 
# Fail counter: 0
# 
# Valoarea citita este corecta.
# Valoare asteptata: 379749833583241
# Valoare citita: 379749833583241
# 
# Read from register location 14: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
# 
#   rezultat = 0
# 
# Fail counter: 0
# 
# Valoarea citita este corecta.
# Valoare asteptata: 0
# Valoare citita: 0
# 
# Read from register location 19: 
#   opcode = 3 (ADD)
#   operand_a = -10
#   operand_b = 9
# 
#   rezultat = -1
# 
# Fail counter: 0
# 
# Valoarea citita este corecta.
# Valoare asteptata: -1
# Valoare citita: -1
# 
# Read from register location 23: 
#   opcode = 4 (SUB)
#   operand_a = 10
#   operand_b = 13
# 
#   rezultat = -3
# 
# Fail counter: 0
# 
# Valoarea citita este corecta.
# Valoare asteptata: -3
# Valoare citita: -3
# 
# Read from register location 27: 
#   opcode = 4 (SUB)
#   operand_a = 8
#   operand_b = 6
# 
#   rezultat = 2
# 
# Fail counter: 0
# 
# Valoarea citita este corecta.
# Valoare asteptata: 2
# Valoare citita: 2
# 
# Read from register location 10: 
#   opcode = 0 (ZERO)
#   operand_a = -14
#   operand_b = 10
# 
#   rezultat = 0
# 
# Fail counter: 0
# 
# Valoarea citita este corecta.
# Valoare asteptata: 0
# Valoare citita: 0
# 
# Read from register location 18: 
#   opcode = 6 (DIV)
#   operand_a = 0
#   operand_b = 9
# 
#   rezultat = 0
# 
# Fail counter: 0
# 
# Valoarea citita este corecta.
# Valoare asteptata: 0
# Valoare citita: 0
# 
# Read from register location 27: 
#   opcode = 4 (SUB)
#   operand_a = 8
#   operand_b = 6
# 
#   rezultat = 2
# 
# Fail counter: 0
# 
# Valoarea citita este corecta.
# Valoare asteptata: 2
# Valoare citita: 2
# 
# Read from register location 21: 
#   opcode = 1 (PASSA)
#   operand_a = -13
#   operand_b = 8
# 
#   rezultat = -13
# 
# Fail counter: 0
# 
# Valoarea citita este corecta.
# Valoare asteptata: -13
# Valoare citita: -13
# 
# Read from register location 31: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
# 
#   rezultat = 0
# 
# Fail counter: 0
# 
# Valoarea citita este corecta.
# Valoare asteptata: 0
# Valoare citita: 0
# 
# Read from register location 4: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
# 
#   rezultat = 0
# 
# Fail counter: 0
# 
# Valoarea citita este corecta.
# Valoare asteptata: 0
# Valoare citita: 0
# 
# Read from register location 21: 
#   opcode = 1 (PASSA)
#   operand_a = -13
#   operand_b = 8
# 
#   rezultat = -13
# 
# Fail counter: 0
# 
# Valoarea citita este corecta.
# Valoare asteptata: -13
# Valoare citita: -13
# 
# Read from register location 1: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
# 
#   rezultat = 0
# 
# Fail counter: 0
# 
# Valoarea citita este corecta.
# Valoare asteptata: 0
# Valoare citita: 0
# 
# Read from register location 13: 
#   opcode = 1 (PASSA)
#   operand_a = 11
#   operand_b = 6
# 
#   rezultat = 11
# 
# Fail counter: 0
# 
# Valoarea citita este corecta.
# Valoare asteptata: 11
# Valoare citita: 11
# 
# Read from register location 14: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
# 
#   rezultat = 0
# 
# Fail counter: 0
# 
# Valoarea citita este corecta.
# Valoare asteptata: 0
# Valoare citita: 0
# 
# Read from register location 1: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
# 
#   rezultat = 0
# 
# Fail counter: 0
# 
# Valoarea citita este corecta.
# Valoare asteptata: 0
# Valoare citita: 0
# 
# Read from register location 29: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
# 
#   rezultat = 0
# 
# Fail counter: 0
# 
# Valoarea citita este corecta.
# Valoare asteptata: 0
# Valoare citita: 0
# 
# Read from register location 30: 
#   opcode = 2 (PASSB)
#   operand_a = -4
#   operand_b = 2
# 
#   rezultat = 2
# 
# Fail counter: 0
# 
# Valoarea citita este corecta.
# Valoare asteptata: 2
# Valoare citita: 2
# 
# Read from register location 4: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
# 
#   rezultat = 0
# 
# Fail counter: 0
# 
# Valoarea citita este corecta.
# Valoare asteptata: 0
# Valoare citita: 0
# 
# Read from register location 25: 
#   opcode = 3 (ADD)
#   operand_a = 2
#   operand_b = 11
# 
#   rezultat = 13
# 
# Fail counter: 0
# 
# Valoarea citita este corecta.
# Valoare asteptata: 13
# Valoare citita: 13
# 
# Read from register location 18: 
#   opcode = 6 (DIV)
#   operand_a = 0
#   operand_b = 9
# 
#   rezultat = 0
# 
# Fail counter: 0
# 
# Valoarea citita este corecta.
# Valoare asteptata: 0
# Valoare citita: 0
# 
# Read from register location 14: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
# 
#   rezultat = 0
# 
# Fail counter: 0
# 
# Valoarea citita este corecta.
# Valoare asteptata: 0
# Valoare citita: 0
# 
# Read from register location 27: 
#   opcode = 4 (SUB)
#   operand_a = 8
#   operand_b = 6
# 
#   rezultat = 2
# 
# Fail counter: 0
# 
# Valoarea citita este corecta.
# Valoare asteptata: 2
# Valoare citita: 2
# 
# Read from register location 31: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
# 
#   rezultat = 0
# 
# Fail counter: 0
# 
# Valoarea citita este corecta.
# Valoare asteptata: 0
# Valoare citita: 0
# 
# Read from register location 16: 
#   opcode = 4 (SUB)
#   operand_a = -7
#   operand_b = 1
# 
#   rezultat = -8
# 
# Fail counter: 0
# 
# Valoarea citita este corecta.
# Valoare asteptata: -8
# Valoare citita: -8
# 
# Read from register location 21: 
#   opcode = 1 (PASSA)
#   operand_a = -13
#   operand_b = 8
# 
#   rezultat = -13
# 
# Fail counter: 0
# 
# Valoarea citita este corecta.
# Valoare asteptata: -13
# Valoare citita: -13
# 
# Read from register location 7: 
#   opcode = 1 (PASSA)
#   operand_a = -6
#   operand_b = 8
# 
#   rezultat = -6
# 
# Fail counter: 0
# 
# Valoarea citita este corecta.
# Valoare asteptata: -6
# Valoare citita: -6
# 
# Read from register location 16: 
#   opcode = 4 (SUB)
#   operand_a = -7
#   operand_b = 1
# 
#   rezultat = -8
# 
# Fail counter: 0
# 
# Valoarea citita este corecta.
# Valoare asteptata: -8
# Valoare citita: -8
# 
# Read from register location 17: 
#   opcode = 2 (PASSB)
#   operand_a = 1
#   operand_b = 12
# 
#   rezultat = 12
# 
# Fail counter: 0
# 
# Valoarea citita este corecta.
# Valoare asteptata: 12
# Valoare citita: 12
# 
# Read from register location 7: 
#   opcode = 1 (PASSA)
#   operand_a = -6
#   operand_b = 8
# 
#   rezultat = -6
# 
# Fail counter: 0
# 
# Valoarea citita este corecta.
# Valoare asteptata: -6
# Valoare citita: -6
# 
# Read from register location 18: 
#   opcode = 6 (DIV)
#   operand_a = 0
#   operand_b = 9
# 
#   rezultat = 0
# 
# Fail counter: 0
# 
# Valoarea citita este corecta.
# Valoare asteptata: 0
# Valoare citita: 0
# 
# Read from register location 20: 
#   opcode = 4 (SUB)
#   operand_a = -15
#   operand_b = 3
# 
#   rezultat = -18
# 
# Fail counter: 0
# 
# Valoarea citita este corecta.
# Valoare asteptata: -18
# Valoare citita: -18
# 
# 
# ***********************************************************
# ***    THIS IS A SELF-CHECKING TESTBENCH (YET).  YOU    ***
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# ** Note: $finish    : ../lab01_testbench-interface/instr_register_test.sv(87)
#    Time: 876 ns  Iteration: 1  Instance: /top/test
# End time: 18:33:57 on Apr 23,2024, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
